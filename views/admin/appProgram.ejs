<style>
	.list-style {
		width: 100% !important;
	}

	.card-header {
		position: relative;
		height: 30px !important;
		justify-content: left !important;
		margin-left: 4px;
	}

	h3.card-title {
		display: block !important;
		line-height: 70px !important;
		margin: 0 !important;
	}

	.name {
		width: 500px;
	}

	.category {
		width: 150px;
		text-align: center;
	}

	.d-day {
		width: 200px;
		margin-right: 0 !important;
	}

	.card-toolbar {
		position: absolute;
		top: 13px;
		right: 35px;
	}

	.fg-0 {
		flex-grow: 0 !important;
	}

	.fs-16 {
		font-size: 16px;
	}

	.w-800 {
		width: 800px !important;
	}

	.h-600 {
		height: 300px !important;
	}

	.odd, .even {
		cursor: pointer;
	}

	.select2-selection__rendered {
		width: 100%;
		text-align: center;
	}

	.custom-checkbox {
        display: flex;
    }
    .checkbox-label {
        display: block;
        position: relative;
        width: fit-content;
        margin-right: 10px;
    }

    .checkbox-label input {
        position: absolute;
        opacity: 0;
        cursor: pointer;
        height: 0;
        width: 0;
    }

    .checkmark {
        position: absolute;
        top: 0;
        left: 0;
        height: 22px;
        width: 22px;
        background-color: white;
        border: 0.5px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
        cursor: pointer;
    }

    .custom-radio .checkmark {
        border-radius: 100%;
    }

    /* On mouse-over, add a grey background color */
    .checkbox-label:hover input ~ .checkmark {
        border-color: rgb(163, 163, 163);
    }

    /* When the checkbox is checked, add a "red" background */
    .checkbox-label input:checked ~ .checkmark {
        background-color: #000;
    }

    /* Create the checkmark/indicator (hidden when not checked) */
    .checkmark:after {
        content: "";
        position: absolute;
        display: none;
    }

    /* Show the checkmark when checked */
    .checkbox-label input:checked ~ .checkmark:after {
        display: block;
    }
    
    /* Style the checkmark/indicator */
    .checkbox-label .checkmark:after {
        left: 7.5px;
        top: 2.5px;
        width: 5px;
        height: 10px;
        border: solid rgb(255, 255, 255);
        border-width: 0 1.5px 1.5px 0;
        -webkit-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
        transform: rotate(45deg);
        z-index: 1000;
    } 

    .custom-radio .checkbox-label .checkmark:after {
        top: 50%;
        left: 2px;
        width: 16px;
        height: 16px;
        border: 4px solid rgb(255, 255, 255);
        border-radius: 100%;
        -webkit-transform: rotate(0);
        -ms-transform: rotate(0);
        transform: rotate(0);
        transform: translateY(-50%);
    }

    .custom-checkbox p {
        height: 22px;
        margin-left: 32px;
        line-height: 22px;
        font-size: 1.2rem;
    }

	@media screen and (min-width: 1280px) {
		.list-style {
			width: 1280px !important;
			margin: auto;
			margin-top: 0px;
		}
	}

	.popup-cancel {
		position: absolute; right: 0px; width: fit-content; margin-right: 30px; padding: 5px 10px !important; background-color: rgb(224, 224, 224);
	}

	.popup-effect {
		transform: translate(0, 50px);
	}
</style>

<script>
	const btn = document.getElementsByClassName('btn-popup')[0];
	const cancel = document.getElementsByClassName('popup-cancel')[0];

	if (btn) {
		btn.addEventListener('click', () => {
			if (document.getElementsByClassName('popup-effect')[0].classList.contains('show')) {
				document.getElementsByClassName('popup-effect')[0].classList.remove('show');
			} else {
				document.getElementsByClassName('popup-effect')[0].classList.add('show');
			}
		});
	} else {}

	if (cancel) {
		cancel.addEventListener('click', () => {
			document.getElementsByClassName('popup-effect')[0].classList.remove('show');
		});
	} else {}
	
</script>
<link href="/stylesheets/datatable.css" rel="stylesheet" type="text/css" />

<link rel='stylesheet' href='/stylesheets/applicants.css' />

<div class="row g-5 g-xl-8 list-style">
	<div class="col-xl-4 list-style">
		<!--begin::List Widget 3-->
		<div class="card card-xl-stretch mb-5 mb-xl-8">
			<!--begin::Header-->
			<div class="card-header border-0">
				<div class="card-toolbar">
					<!--begin::Menu-->
					<button class="btn btn-w-m btn-primary" type="button" id="Excel">Excel</button>
					<button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary btn-popup">
						<!--begin::Svg Icon | path: icons/duotune/general/gen024.svg-->
						<span class="svg-icon svg-icon-5 svg-icon-gray-500 me-1">
							<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
								<path d="M19.0759 3H4.72777C3.95892 3 3.47768 3.83148 3.86067 4.49814L8.56967 12.6949C9.17923 13.7559 9.5 14.9582 9.5 16.1819V19.5072C9.5 20.2189 10.2223 20.7028 10.8805 20.432L13.8805 19.1977C14.2553 19.0435 14.5 18.6783 14.5 18.273V13.8372C14.5 12.8089 14.8171 11.8056 15.408 10.964L19.8943 4.57465C20.3596 3.912 19.8856 3 19.0759 3Z" fill="black" />
							</svg>
						</span>
						<!--end::Svg Icon-->
					</button>
					<!--begin::Menu 3-->
					<div class="popup-effect menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-800 menu-state-bg-light-primary fw-bold w-200px w-800 py-3 h-600 " data-kt-menu="true">
						<!--begin::Header-->
						<button type="button" class="btn btn-light popup-cancel">X</button>

						<div class="card-header align-items-center border-0 mt-4 h-fit" style="height: 0px !important;">
							<h3 class="card-title align-items-start flex-column">
								<span class="fw-bolder mb-2 text-dark">조건을 선택해주세요</span>
								<span class="text-muted fw-bold fs-7">(선택하지 않으면 모두 포함)</span>
							</h3>
						</div>
						<!--end::Header-->
						<!--begin::Body-->
						<div class="card-body pt-5">
							<div class="search-box mt-3">
								<div class="search-box-first mt-6">

									<!-- 상담 이름 -->
									<select class="select-category select2-selection--single form-select form-select-solid" name="category" id="category">
										<option value="" selected>프로그램명</option>
									</select>

									<!-- 신청자 이름 -->
									<input type="text" name="name" id="name" class="form-control form-control-solid" placeholder="신청자 이름">

									<!-- 성별 -->
									<select class="select-category select2-selection--single form-select form-select-solid" name="gender" id="gender">
										<option value="" selected disabled hidden>성별</option>
										<option value="">모두</option>
										<option value="남">남</option>
										<option value="여">여</option>
										<option value="그 외">그 외</option>
									</select>

									<!-- 나이 -->
									<input type="text" name="age" id="age" class="form-control form-control-solid" placeholder="나이(19 or 10~30)">
								</div>

								<div class="search-box-second mt-3">
									<!-- 상담 완료 여부 -->
									<div style="display: none;">
										<select class="select-category select2-selection--single form-select form-select-solid" name="done" id="done">
											<option value="" selected disabled hidden>상태</option>
											<option value="">모두</option>
											<option value="1">상담완료</option>
											<option value="0">상담 전</option>
										</select>
									</div>
									
									<div style="display: flex; margin-left: 20px;">
										<p style="height: 40px; line-height: 40px; margin-right: 5px; margin-bottom: 0px;">신청 날짜 범위</p>
										<!-- datepicker -->
										<div class="datepicker" style="display: flex; margin-top: 5px;">
											<input type="text" name="start-date" id="start-date" class="form-control form-control-solid" placeholder="시작 날짜">
											<span>~</span>
											<input type="text" name="end-date" id="end-date" class="form-control form-control-solid" placeholder="마지막 날짜">
										</div>
									</div>
								</div>
<!-- 
					<div class="mt-6" style="position: relative;">
						<p style="text-align: center;">상담 가능한 시간</p>
						<div class="search-box-second mt-3">
							<div style="display: flex;">
								<div class="week" style="margin-top: 35px;">
									<p>월</p>
									<p>화</p>
									<p>수</p>
									<p>목</p>
									<p>금</p>
								</div>
								<div class="time">
									<div class="time-header" style="display: flex; margin-left: 17px;">
										<% for (let i=9; i<22; i++) { %>
										<p style="width: 22px;margin-left: 20px;"><%= i %></p>
										<% } %>
									</div>

									<div class="checkbox-day" style="position: relative; height: 30px;">
										<div style="display: flex;">
											<% for (let i=9; i<22; i++) { %>
												<div class="custom-checkbox" style="margin-left: 32px;">
													<label class="checkbox-label">
														<input type="checkbox" name="time" value="월<%= i %>"/>
														<span class="checkmark"></span>
													</label>
												</div>
											<% } %>
										</div>
									</div>

									<div class="checkbox-day" style="position: relative; height: 30px;">
										<div style="display: flex;">
											<% for (let i=9; i<22; i++) { %>
												<div class="custom-checkbox" style="margin-left: 32px;">
													<label class="checkbox-label">
														<input type="checkbox" name="time" value="화<%= i %>"/>
														<span class="checkmark"></span>
													</label>
												</div>
											<% } %>
										</div>
									</div>

									<div class="checkbox-day" style="position: relative; height: 30px;">
										<div style="display: flex;">
											<% for (let i=9; i<22; i++) { %>
												<div class="custom-checkbox" style="margin-left: 32px;">
													<label class="checkbox-label">
														<input type="checkbox" name="time" value="수<%= i %>"/>
														<span class="checkmark"></span>
													</label>
												</div>
											<% } %>
										</div>
									</div>

									<div class="checkbox-day" style="position: relative; height: 30px;">
										<div style="display: flex;">
											<% for (let i=9; i<22; i++) { %>
												<div class="custom-checkbox" style="margin-left: 32px;">
													<label class="checkbox-label">
														<input type="checkbox" name="time" value="목<%= i %>"/>
														<span class="checkmark"></span>
													</label>
												</div>
											<% } %>
										</div>
									</div>

									<div class="checkbox-day" style="position: relative; height: 30px;">
										<div style="display: flex;">
											<% for (let i=9; i<22; i++) { %>
												<div class="custom-checkbox" style="margin-left: 32px;">
													<label class="checkbox-label">
														<input type="checkbox" name="time" value="금<%= i %>"/>
														<span class="checkmark"></span>
													</label>
												</div>
											<% } %>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div> -->

					<div class="search-btn mt-3">
						<button type="button" class="mt-3 btn btn-secondary" style="margin-right: 10px;" id="btn-counsel-initialize">초기화</button>
						<button type="button" class="mt-3 btn btn-primary" id="btn-counsel-search">검색</button>
					</div>
				</div>
				<!--end::Timeline-->
			</div>
			<!--end: Card Body-->
					</div>
					<!--end::Menu 3-->
				</div>
			</div>
			<!--end::Header-->
			<!--begin::Body-->
			<div class="card-body pt-2">
				<table id="appProgram" class="table table-striped table-row-bordered gy-5 gs-7 border rounded">
					<thead>
						<tr class="fw-bolder fs-6 text-gray-800 px-7">
							<th class="w-300">프로그램명</th>
							<th>성명</th>
							<th>성별</th>
							<th>나이</th>
							<th class="w-300">도움영역</th>
							<th class="w-200">신청날짜</th>
						</tr>
					</thead>
					<tbody>
						<!-- <tr>
							<td>Tiger Nixon</td>
							<td>System Architect</td>
							<td>Edinburgh</td>
							<td>61</td>
							<td>2011/04/25</td>
							<td>$320,800</td>
						</tr> -->
					</tbody>
				</table>
			</div>
			<!--end::Body-->
		</div>
		<!--end:List Widget 3-->
	</div>
</div>

<script src="/assets/plugins/custom/datatables/datatables.bundle.js"></script>
<script type="text/javascript" src="/javascripts/admin/applicants.js"></script>

<!-- 필수, SheetJS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.14.3/xlsx.full.min.js"></script>
<!--필수, FileSaver savaAs 이용 -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/1.3.8/FileSaver.min.js"></script>

<script>
	var excelHandler = {
        getExcelFileName : function(){
            return '신청내역.xlsx';
        },
        getSheetName : function(){
            return '신청내역';
        },
        getExcelData : function(excelData){
            return excelData; 
        },
        getWorksheet : function(excelData){
            return XLSX.utils.json_to_sheet(this.getExcelData(excelData));
        }
	}

	function s2ab(s) { 
		var buf = new ArrayBuffer(s.length); //convert s to arrayBuffer
		var view = new Uint8Array(buf);  //create uint8array as viewer
		for (var i=0; i<s.length; i++) view[i] = s.charCodeAt(i) & 0xFF; //convert to octet
		return buf;    
	}
	function exportExcel(excelData){ 
		// step 1. workbook 생성
		var wb = XLSX.utils.book_new();

		// step 2. 시트 만들기 
		var newWorksheet = excelHandler.getWorksheet(excelData);
		
		// step 3. workbook에 새로만든 워크시트에 이름을 주고 붙인다.  
		XLSX.utils.book_append_sheet(wb, newWorksheet, excelHandler.getSheetName());

		// step 4. 엑셀 파일 만들기 
		var wbout = XLSX.write(wb, {bookType:'xlsx',  type: 'binary'});

		// step 5. 엑셀 파일 내보내기 
		saveAs(new Blob([s2ab(wbout)],{type:"application/octet-stream"}), excelHandler.getExcelFileName());
	}
	$(document).ready(function() { 
		$("#Excel").click(function(){
			const query = new URLSearchParams(location.search);
			const path = location.pathname.split('/');
			const url = path[2];

			console.log('?')
			$.ajax({
				url: `/admin/${url}/excel`,
				type: 'get',
				data:{
					category: query.get('category'),
					name: query.get('name'),
					gender: query.get('gender'),
					age: query.get('age'),
					startdate: query.get('startdate'),
					enddate: query.get('enddate'),
					done: query.get('done'),
				},
				dataType:'json',
				success:function(result){
					const excelData = [];
					result.forEach(element => {
						excelData.push({
							'서비스': element.program_name,
							'이름': element.name,
							'성별': element.gender,
							'생년월일': element.birth,
							'나이(만)': element.age,
							'주소': element.adress,
							'이메일': element.email,
							'전화번호': element.phone,
							'경위': element.how,
							'도움영역': element.support,
							'기대하는 부분': element.expect_detail,
						});
					});
					exportExcel(excelData);
				}
			});
		});
	});
</script>